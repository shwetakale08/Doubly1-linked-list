#include<stdio.h>
#include<stdlib.h>
struct node
{
	int data;
	struct node *next,*prev;
};
struct node *create(struct node *list)
{
	int i,n;
	struct node *newnode,*temp;
	printf("Enter limit:");
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("Enter value:");
	scanf("%d",&newnode->data);
	newnode->next=NULL;
	if(list==NULL)
	{
		list=newnode;
		temp=newnode;
	}
	else
	{
		temp->next=newnode;
		newnode->prev=temp;
		temp=newnode;
	}
}
return list;
}
void display(struct node *list)
{
	struct node *temp;
   for(temp=list;temp!=NULL;temp=temp->next)
  {
   printf("%d\t",temp->data);
}
}
struct node *insertbeg(struct node *list)
{
	struct node *newnode;
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("Enter number:");
	scanf("%d",&newnode->data);
	newnode->next=list;
	list->prev=newnode;
	list=newnode;
	return list;
}
struct node *insertend(struct node *list)
{
	struct node *newnode,*temp;
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("Enter value:");
	scanf("%d",&newnode->data);
	newnode->next=NULL;
	for(temp=list;temp->next!=NULL;temp=temp->next);
	temp->next=newnode;
	newnode->prev=temp;
	return list;
	}
struct node *insertmid(struct node *list)
{
	int pos,i;
	struct node *newnode,*temp;
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("Enter value:");
	scanf("%d",&newnode->data);
	printf("Enter position:");
	scanf("%d",&pos);
	for(i=0,temp=list;i<pos-1&&temp->next!=NULL;i++,temp=temp->next);
	newnode->next=temp->next;
	temp->next=newnode;
	return list;
}
struct node *delbeg(struct node *list)
{
	struct node *temp;
	temp=list;
	list=list->next;
	free(temp);
	return list;
}

struct node *delend(struct node *list)
{
	struct node *temp,*temp1;
	for(temp=list;temp->next->next!=NULL;temp=temp->next);
	temp1=temp->next;
	temp->next=NULL;
	free(temp1);
	return list;
}
int main()
{
	int ch;
	struct node *list=NULL;
	do
	{
     printf("\n1-create");
     printf("\n2-display");
     printf("\n3-insert begining");
     printf("\n4-insert mid");
     printf("\n5-insert end");
     printf("\n6-delete begining");
     printf("\n7-delete end");
     printf("\nenter your choice");
     scanf("%d",&ch);
     switch(ch)
	 {
	 	case 1:list=create(list);
	 	       break;
	 	case 2:display(list);
		       break;   
		case 3:list=insertbeg(list);
		       break;
		case 4:list=insertmid(list);
		       break;
		case 5:list=insertend(list);
		       break;
		case 6:list=delbeg(list);
		       break;   
		case 7:list=delend(list);
		       break;	   	   	   	       
	 }
		
	}while(ch<8);
	
}
